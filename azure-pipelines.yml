trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: zipdeploy-secrets
- name: scmHost
  value: 'rymec-demo-app-d6h5gmc9crhnc5g7.scm.centralus-01.azurewebsites.net'
- name: zipPath
  value: '$(Build.ArtifactStagingDirectory)/app.zip'

steps:
# 1) Build fat-jar
- task: Gradle@2
  displayName: '🔨 Build Spring Boot fat-jar'
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'clean bootJar'
    options: '--no-daemon'

# 1.1) DEBUG: list what's in build/libs
- script: |
    echo "🔍 build/libs contents:"
    ls -lh build/libs
  displayName: '🔍 Verify build output'

# 2) Copy to staging
- task: CopyFiles@2
  displayName: '📦 Copy app.jar → staging'
  inputs:
    contents: 'build/libs/app.jar'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true

# 2.1) DEBUG: list staging dir
- script: |
    echo "🔍 staging directory contents:"
    ls -lh $(Build.ArtifactStagingDirectory)
  displayName: '🔍 Verify staging'

# 3) Archive
- task: ArchiveFiles@2
  displayName: '📁 Archive app.jar → app.zip'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/app.jar'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(zipPath)'
    replaceExistingArchive: true

# 3.1) DEBUG: inspect the ZIP
- script: |
    echo "🔍 ZIP contents:"
    unzip -l $(zipPath)
  displayName: '🔍 Inspect ZIP'

# 4) Deploy
- task: Bash@3
  displayName: '🚀 Deploy via ZipDeploy'
  inputs:
    targetType: 'inline'
    script: |
      echo "Deploying to https://$(scmHost)/api/zipdeploy"
      AUTH=$(printf '%s:%s' "$DEPLOY_USER" "$DEPLOY_PASSWORD" | base64)
      curl -v -X POST \
        -H "Authorization: Basic $AUTH" \
        -H "Content-Type: application/zip" \
        --data-binary "@$(zipPath)" \
        "https://$(scmHost)/api/zipdeploy"

